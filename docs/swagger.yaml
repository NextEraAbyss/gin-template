basePath: /
definitions:
  models.ArticleListResponse:
    properties:
      items:
        description: 文章列表
        items:
          $ref: '#/definitions/models.ArticleResponse'
        type: array
      total:
        description: 总数
        type: integer
    type: object
  models.ArticleResponse:
    properties:
      author:
        allOf:
        - $ref: '#/definitions/models.User'
        description: 作者信息
      author_id:
        description: 作者ID
        type: integer
      comment_count:
        description: 评论次数
        type: integer
      content:
        description: 文章内容
        type: string
      created_at:
        description: 创建时间
        type: string
      id:
        description: 文章ID
        type: integer
      like_count:
        description: 点赞次数
        type: integer
      published_at:
        description: 发布时间
        type: string
      status:
        description: 文章状态
        type: integer
      title:
        description: 文章标题
        type: string
      updated_at:
        description: 更新时间
        type: string
      view_count:
        description: 浏览次数
        type: integer
    type: object
  models.ChangePasswordRequest:
    properties:
      new_password:
        description: 新密码
        type: string
      old_password:
        description: 旧密码
        type: string
    required:
    - new_password
    - old_password
    type: object
  models.CreateArticleRequest:
    properties:
      content:
        description: 文章内容，不能为空
        minLength: 1
        type: string
      status:
        description: 文章状态：1-发布，0-草稿
        enum:
        - 0
        - 1
        type: integer
      title:
        description: 文章标题，1-200字符
        maxLength: 200
        minLength: 1
        type: string
    required:
    - content
    - title
    type: object
  models.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  models.LoginResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/models.User'
    type: object
  models.RegisterRequest:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        maxLength: 32
        minLength: 6
        type: string
      username:
        maxLength: 32
        minLength: 3
        type: string
    required:
    - email
    - full_name
    - password
    - username
    type: object
  models.UpdateArticleRequest:
    properties:
      content:
        description: 文章内容，可选，不能为空
        minLength: 1
        type: string
      status:
        description: 文章状态，可选：1-发布，0-草稿
        enum:
        - 0
        - 1
        type: integer
      title:
        description: 文章标题，可选，1-200字符
        maxLength: 200
        minLength: 1
        type: string
    type: object
  models.User:
    properties:
      avatar:
        description: 头像URL
        type: string
      created_at:
        description: 创建时间
        type: string
      deleted_at:
        description: 删除时间
        type: string
      email:
        description: 邮箱，唯一
        type: string
      id:
        description: 用户ID
        type: integer
      last_login_at:
        description: 最后登录时间
        type: string
      nickname:
        description: 昵称
        type: string
      status:
        description: 用户状态：1-正常，0-禁用
        type: integer
      updated_at:
        description: 更新时间
        type: string
      username:
        description: 用户名，唯一
        type: string
    type: object
  models.UserListResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/models.User'
        type: array
      total:
        type: integer
    type: object
  models.UserResponse:
    properties:
      avatar:
        description: 头像URL
        type: string
      created_at:
        description: 创建时间
        type: string
      email:
        description: 邮箱
        type: string
      id:
        description: 用户ID
        type: integer
      last_login_at:
        description: 最后登录时间
        type: string
      nickname:
        description: 昵称
        type: string
      status:
        description: 用户状态
        type: integer
      updated_at:
        description: 更新时间
        type: string
      username:
        description: 用户名
        type: string
    type: object
  utils.Response:
    properties:
      code:
        description: 错误码
        type: integer
      data:
        description: 数据
      message:
        description: 错误信息
        type: string
    type: object
host: localhost:9999
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for a Gin API template.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Gin API Template
  version: "1.0"
paths:
  /api/v1/articles:
    get:
      consumes:
      - application/json
      description: 分页获取文章列表，支持搜索和排序
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        type: integer
      - description: 搜索关键词
        in: query
        name: keyword
        type: string
      - description: 文章状态(1:草稿,2:已发布)
        in: query
        name: status
        type: integer
      - description: 排序字段(created_at,view_count)
        in: query
        name: order_by
        type: string
      - description: 排序方向(asc,desc)
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.ArticleListResponse'
              type: object
      summary: 获取文章列表
      tags:
      - 文章管理
    post:
      consumes:
      - application/json
      description: 创建新文章
      parameters:
      - description: 文章信息
        in: body
        name: article
        required: true
        schema:
          $ref: '#/definitions/models.CreateArticleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.ArticleResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - Bearer: []
      summary: 创建文章
      tags:
      - 文章管理
  /api/v1/articles/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定文章
      parameters:
      - description: 文章ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: 文章不存在
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - Bearer: []
      summary: 删除文章
      tags:
      - 文章管理
    get:
      consumes:
      - application/json
      description: 根据ID获取文章详情
      parameters:
      - description: 文章ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.ArticleResponse'
              type: object
      summary: 获取文章详情
      tags:
      - 文章管理
    put:
      consumes:
      - application/json
      description: 更新文章信息
      parameters:
      - description: 文章ID
        in: path
        name: id
        required: true
        type: integer
      - description: 文章信息
        in: body
        name: article
        required: true
        schema:
          $ref: '#/definitions/models.UpdateArticleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.ArticleResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: 文章不存在
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - Bearer: []
      summary: 更新文章
      tags:
      - 文章管理
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: 用户登录接口，返回JWT令牌
      parameters:
      - description: 登录信息
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.LoginResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: 用户名或密码错误
          schema:
            $ref: '#/definitions/utils.Response'
      summary: 用户登录
      tags:
      - 认证管理
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: 新用户注册接口
      parameters:
      - description: 注册信息
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.UserResponse'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/utils.Response'
      summary: 用户注册
      tags:
      - 认证管理
  /api/v1/users:
    get:
      consumes:
      - application/json
      description: 分页获取用户列表
      parameters:
      - default: 1
        description: 页码，默认为1
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量，默认为10
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 用户列表获取成功
          schema:
            $ref: '#/definitions/models.UserListResponse'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - Bearer: []
      summary: 获取用户列表
      tags:
      - 用户管理
  /api/v1/users/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定用户
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 用户删除成功
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: 用户不存在
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - Bearer: []
      summary: 删除用户
      tags:
      - 用户管理
    get:
      consumes:
      - application/json
      description: 根据用户ID获取用户详细信息
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 用户详情获取成功
          schema:
            $ref: '#/definitions/models.UserResponse'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: 用户不存在
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - Bearer: []
      summary: 获取用户详情
      tags:
      - 用户管理
    put:
      consumes:
      - application/json
      description: 更新指定用户的信息
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      - description: 用户信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: 用户信息更新成功
          schema:
            $ref: '#/definitions/models.UserResponse'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: 用户不存在
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - Bearer: []
      summary: 更新用户信息
      tags:
      - 用户管理
  /api/v1/users/change-password:
    post:
      consumes:
      - application/json
      description: 修改当前登录用户的密码
      parameters:
      - description: 密码信息
        in: body
        name: passwordForm
        required: true
        schema:
          $ref: '#/definitions/models.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 密码修改成功
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - Bearer: []
      summary: 修改密码
      tags:
      - 用户管理
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
